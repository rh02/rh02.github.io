<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on 申恒恒的博客</title>
    <link>http://shenheng.xyz/tags/golang/</link>
    <description>Recent content in golang on 申恒恒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>shenheng.xyz &amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 11 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://shenheng.xyz/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>starlight 介绍</title>
      <link>http://shenheng.xyz/posts/2018-12-11-starlight/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shenheng.xyz/posts/2018-12-11-starlight/</guid>
      <description>翻译自 https://npf.io/2018/12/starlight. 翻译水平能力有限，还望包涵。本次主要讲解 starlight. Starlight 主要封装了 google 的 Go语言实现的 Starlark, Startlark 是一种类 python 语言的语言（可以看成 python 语言的子集），最初是出现</description>
    </item>
    
    <item>
      <title>管道化 SQL</title>
      <link>http://shenheng.xyz/posts/2018-12-11-how-to-use-sql-improve-my-work-pipe/</link>
      <pubDate>Tue, 11 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://shenheng.xyz/posts/2018-12-11-how-to-use-sql-improve-my-work-pipe/</guid>
      <description>本文对原文章有所取舍，如有问题可以详见原文. 在这篇博文中，我想分享两个工具： sql 和 chart ，我们最近一直在使用它们.它们共同组成了一个有趣的模式，用</description>
    </item>
    
    <item>
      <title>beego的路由解析</title>
      <link>http://shenheng.xyz/posts/2017-12-12-beego-route/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>http://shenheng.xyz/posts/2017-12-12-beego-route/</guid>
      <description>路由形式 http://localhost:8080/topic/view?tid=17 http://localhost:8080/topic/view/17 共有这两种形式，其中： 第一个是query string的形式 第二个是路由路径，正则提取 直接添加路由或者自动路由都可以。 .gallery { overflow: hidden; margin: 10px;</description>
    </item>
    
  </channel>
</rss>